# Generated by Django 2.2.1 on 2019-05-27 22:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import site_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_realtor', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('heading', models.CharField(max_length=300)),
                ('district', models.CharField(max_length=300)),
                ('cost', models.IntegerField()),
                ('description', models.CharField(max_length=1000)),
                ('image', models.ImageField(blank=True, default='default.png', upload_to=site_app.models.get_image_path)),
                ('owner_contract', models.FileField(blank=True, upload_to=site_app.models.get_file_path)),
                ('is_free', models.BooleanField(default=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('total_size', models.IntegerField()),
                ('living_size', models.IntegerField()),
                ('kitchen_size', models.IntegerField()),
                ('rooms_count', models.IntegerField()),
                ('floor', models.IntegerField()),
                ('elevator', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('heading', models.CharField(max_length=300)),
                ('district', models.CharField(max_length=300)),
                ('cost', models.IntegerField()),
                ('description', models.CharField(max_length=1000)),
                ('image', models.ImageField(blank=True, default='default.png', upload_to=site_app.models.get_image_path)),
                ('owner_contract', models.FileField(blank=True, upload_to=site_app.models.get_file_path)),
                ('is_free', models.BooleanField(default=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('house_size', models.IntegerField()),
                ('garage', models.BooleanField(default=False)),
                ('outdoors_size', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('heading', models.CharField(max_length=300)),
                ('district', models.CharField(max_length=300)),
                ('cost', models.IntegerField()),
                ('description', models.CharField(max_length=1000)),
                ('image', models.ImageField(blank=True, default='default.png', upload_to=site_app.models.get_image_path)),
                ('owner_contract', models.FileField(blank=True, upload_to=site_app.models.get_file_path)),
                ('is_free', models.BooleanField(default=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('size', models.IntegerField()),
                ('floor', models.IntegerField()),
                ('total_rooms', models.IntegerField()),
                ('elevator', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RealtorPlacement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='site_app.Flat')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='site_app.House')),
                ('realtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='realtor', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='site_app.Room')),
            ],
        ),
        migrations.CreateModel(
            name='PrivateMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=500)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placement_type', models.CharField(max_length=25)),
                ('is_approved', models.BooleanField(default=False)),
                ('placement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placement', to='site_app.RealtorPlacement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
